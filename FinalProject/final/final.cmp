	component final is
		port (
			clk_clk            : in    std_logic                     := 'X';             -- clk
			key_wire_export    : in    std_logic_vector(3 downto 0)  := (others => 'X'); -- export
			led_wire_export    : out   std_logic_vector(7 downto 0);                     -- export
			reset_reset_n      : in    std_logic                     := 'X';             -- reset_n
			sdram_clk_clk      : out   std_logic;                                        -- clk
			sdram_wire_addr    : out   std_logic_vector(12 downto 0);                    -- addr
			sdram_wire_ba      : out   std_logic_vector(1 downto 0);                     -- ba
			sdram_wire_cas_n   : out   std_logic;                                        -- cas_n
			sdram_wire_cke     : out   std_logic;                                        -- cke
			sdram_wire_cs_n    : out   std_logic;                                        -- cs_n
			sdram_wire_dq      : inout std_logic_vector(31 downto 0) := (others => 'X'); -- dq
			sdram_wire_dqm     : out   std_logic_vector(3 downto 0);                     -- dqm
			sdram_wire_ras_n   : out   std_logic;                                        -- ras_n
			sdram_wire_we_n    : out   std_logic;                                        -- we_n
			switch_wire_export : in    std_logic_vector(7 downto 0)  := (others => 'X'); -- export
			rgb_export         : in    std_logic_vector(29 downto 0) := (others => 'X'); -- export
			inx_export         : in    std_logic_vector(9 downto 0)  := (others => 'X'); -- export
			iny_export         : in    std_logic_vector(9 downto 0)  := (others => 'X'); -- export
			vs_export          : in    std_logic                     := 'X';             -- export
			clk_wire_export    : out   std_logic;                                        -- export
			posx_export        : out   std_logic_vector(9 downto 0);                     -- export
			posy_export        : out   std_logic_vector(9 downto 0)                      -- export
		);
	end component final;

